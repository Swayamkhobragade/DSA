import java.util.*;

class LL {
    Node head;
    int index=0;
    class Node {
        int data;
        Node next;

        Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public void printlist() {
        Node curnode = head;
        while (curnode != null) {
            System.out.print(curnode.data + " -> ");
            curnode = curnode.next;
        }
        System.out.print("null");
    }

    public void addfirst(int data) {
        Node newnode = new Node(data);
        if (head == null) {
            head = newnode;
            return;
        }
        newnode.next = head;
        head = newnode;
    }

    public void addlast(int data) {
       if(data<25){
            Node newnode = new Node(data);
            if (head == null) {
            head = newnode;
            return;
            }
            Node curnode = head;
            while (curnode.next != null) {
                curnode = curnode.next;
            }
            curnode.next = newnode;
        }
    }
    public void search(int element) {
        if (head == null) {
            System.out.print("list is empty");
            return;
        }
        Node curnode = head;
        while (curnode.next != null) {
            if(curnode.data==element){
                break;
            }
            curnode = curnode.next;
            index++;
        }
        System.out.println(index);
    }
}
public class Main {
    public static void main(String[] args) {
        LL list = new LL();
        list.addlast(1);
        list.addlast(5);
        list.addlast(7);
        list.addlast(3);
        list.addlast(8);
        list.addlast(2);
        list.addlast(3);
        list.search(3);
        list.printlist();
        
    }
}